{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeHolder","placeholder","onChange","handleChange","App","e","console","log","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","react","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAEaA,EAAK,SAACC,GAClB,OACI,sBAAOC,UAAU,iBAAjB,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACpB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJdC,EAAS,SAACR,GACrB,OACA,sBAAKC,UAAU,YAAf,UAA4BD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACrD,cAAC,EAAD,CAAsBA,QAASA,GAApBA,EAAQC,OADpB,QCHWM,G,MAAU,SAACX,GACpB,OACI,qBAAKC,UAAU,SAAf,SACI,uBAAOW,KAAK,SACXC,YAAab,EAAMc,YACfC,SAAUf,EAAMgB,mBC+ClBC,E,kDAhDb,aAAc,IAAD,8BACX,gBAiBDD,aAAa,SAACE,GACZC,QAAQC,IAAR,gBACD,EAAKC,SAAS,CAACC,YAAYJ,EAAEK,OAAOC,SAlBpC,EAAKC,MAAM,CACThB,SAAS,GACTa,YAAY,IAJH,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJ,EAAKT,SAAS,CAACZ,SAASqB,IACxBX,QAAQC,IAAI,EAAKK,MAAMhB,e,oBAY3B,WACE,MAA6BsB,KAAKN,MAA3BhB,EAAP,EAAOA,SAASa,EAAhB,EAAgBA,YACXU,EAAkBvB,EAASwB,QAAO,SAAA7B,GAAO,OAAEA,EAAQE,KAAK4B,cAAcC,SAASb,MAEpF,OACE,gCACA,kDACA,cAAC,EAAD,CACCR,YAAY,kBACVE,aAAce,KAAKf,eAGtB,cAAC,EAAD,CAAUP,SAAUuB,W,GAtCRI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d324b2e8.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./card.styles.css\"\r\nexport const Card=(props)=>{\r\n return(\r\n     <div   className=\"card-container\">\r\n       <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n         <h2>{props.monster.name}</h2>\r\n         <p>{props.monster.email}</p>\r\n     </div>\r\n )\r\n}","import React from \"react\";\r\nimport \"./card-list.styles.css\"\r\nimport {Card} from \"../card/card.component\"\r\nexport const CardList=(props)=>{\r\n  return (\r\n  <div className=\"card-list\">{props.monsters.map(monster=>\r\n   <Card key={monster.id}monster={monster}/>\r\n  )} </div>\r\n  )\r\n}","import React from \"react\"\r\nimport \"./search-box.styles.css\"\r\nexport const SearchBox=(props)=>{\r\n    return(\r\n        <div className=\"search\">\r\n            <input type=\"search\"\r\n             placeHolder={props.placeholder}\r\n                 onChange={props.handleChange}\r\n             />\r\n        </div>\r\n    )\r\n}","\nimport './App.css';\nimport react from 'react';\nimport {CardList} from \"./components/card-list/card-list.component.jsx\"\nimport {SearchBox} from \"./components/search-box/search-box.component\"\nclass App extends react.Component {\n  constructor(){\n    super()\n    this.state={\n      monsters:[],\n      searchField:''\n    }\n    \n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(res=>res.json())\n    .then(users=>{\n      this.setState({monsters:users})\n      console.log(this.state.monsters)\n    }\n  \n      )\n  }\n   handleChange=(e)=>{\n     console.log(this)\n    this.setState({searchField:e.target.value})\n   }\n  \n\n  \n  render(){\n    const {monsters,searchField}=this.state\n   const filteredMonsters= monsters.filter(monster=>monster.name.toLowerCase().includes(searchField)\n    )\n    return (\n      <div>\n      <h1>monsters rolodex</h1>\n      <SearchBox\n       placeholder=\"search monsters\"\n         handleChange={this.handleChange}\n       />\n      \n      <CardList monsters={filteredMonsters}/>\n        \n      </div>\n      \n       \n     \n    );\n  }\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}